function Pixel(x, y, color, size) {
    this.x = x;
    this.y = y;
    this.color = color;
	this.size = size/2;
    this.vx = Math.random()*1-.5;
    this.vy = Math.random()*1-.5;
    
    this.update = function() {
		this.x += this.vx;
		this.y += this.vy;
		this.
		this.draw();
    };
    
    this.draw = function() {
        c.beginPath();
        c.arc(this.x, this.y, this.size, Math.PI * 2, false);
        c.fillStyle = this.color;
        c.fill();
        c.closePath();
    };
	
	this.onScreen = function() {
		return !(this.x + this.size < 0 ||
			this.x - this.size > canvas.width ||
			this.y + this.size < 0 ||
			this.y - this.size > canvas.height);
	};
}

function Pixelate() {
	this.pixels = [];
	this.grid = 10;
	
	this.setup = function() {
		var imageData = c.getImageData(0, 0, canvas.width, canvas.height);
		
		var imageData = c.getImageData(0, 0, canvas.width, canvas.height);
		var data = imageData.data;
		
		for(var i = 0; i < data.length; i += 4*this.grid) {
			if(data[i] && data[i+1] && data[i+2]) {
				var x = (i/4)%canvas.width;
				var y = Math.floor((i/4)/canvas.width);
				var color = "rgb("+data[i]+", "+data[i+1]+", "+data[i+2]+")";
				
				this.pixels.push(new Pixel(x, y, color, this.grid));
			}
			
			if(Math.floor((i/4)/canvas.width) % this.grid) {
				i += canvas.width*4;
			}
		}
	};
	
	this.update = function() {
		for(var i = this.pixels.length - 1; i >= 0; i--) {
			if(this.pixels[i].onScreen()) {
				this.pixels[i].update();
			} else {
				this.pixels.splice(i, 1)
			}
		}
	};
}